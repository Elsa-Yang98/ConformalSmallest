load_all()
library(devtools)
load_all()
warnings()
load_all()
document()
load_all()
document()
source('~/Desktop/ConformalSmallest/R/efcp.R')
usethis::use_testthat()
load_all()
rm(list=ls())
load_all()
document()
load_all()
document()
load_all()
document()
?coef
document()
document()
load_all()
document()
load_all()
document()
load_all()
load_all()
document()
load_all()
document()
load_all()
document()
load_all()
document()
out.vfcp=vfcp.fun(X=matrix(1,100,3),Y=rep(1,100),X0=matrix(1,10,3) )
df=3
l=100    #number of dimensions
l.lambda=100
lambda_seq=seq(0,200,l=l.lambda)
d = 5
alpha=0.1
n=50   #number of training samples
n0=10  #number of prediction points
rho=0.5
Sigma=matrix(rho,d,d)
diag(Sigma)=rep(1,d)
beta=rep(1:5,d/5)
X0=mvtnorm::rmvt(n0,Sigma,df)
X=mvtnorm::rmvt(n,Sigma,df)	#multivariate t distribution
eps=rt(n,df)*(1+sqrt(X[,1]^2+X[,2]^2))
Y=X%*%beta+eps
out.vfcp=vfcp.fun(X,Y,X0 )
X=matrix(1,100,3)
Y=rep(1,100)
X0=matrix(1,10,3)
efcp.fun(X=matrix(1,100,3),Y=rep(1,100),X0=matrix(1,10,3) )
load_all()
rm(list=ls())
load_all()
document()
load_all()
document()
load_all()
document()
load_all()
document()
library(ConformalSmallest)
load_all()
document()
?predict
load_all()
?predict
document()
load_all()
document()
load_all()
document()
protein=as.matrix(read.csv("CASP.csv",header=TRUE))
X_full=protein[,2:9]
Y_full=protein[,1]
save(X_full,Y_full,file='data/blog.rda')
getwd()
protein=as.matrix(read.csv("data-raw/CASP.csv",header=TRUE))
X_full=protein[,2:9]
Y_full=protein[,1]
save(X_full,Y_full,file='data/blog.rda')
protein=as.matrix(read.csv("data-raw/CASP.csv",header=TRUE))
X_full=protein[,2:9]
Y_full=protein[,1]
save(X_full,Y_full,file='data/protein.rda')
blog=as.matrix(read.csv("data-raw/blogData_train.csv",header=TRUE))
X_full=blog[,2:9]
Y_full=blog[,1]
save(X_full,Y_full,file='data/blog.rda')
concrete=as.matrix(read.csv("concrete.csv",header=FALSE,sep=","))
X_full=concrete[,1:8]
Y_full=concrete[,9]
save(X_full,Y_full,file='data/concrete.rda')
getwd()
concrete=as.matrix(read.csv("concrete.csv",header=FALSE,sep=","))
protein=as.matrix(read.csv("data-raw/CASP.csv",header=TRUE))
concrete=as.matrix(read.csv("concrete.csv",header=FALSE,sep=","))
news=as.matrix(read.csv("OnlineNewsPopularity.csv",header=FALSE))
setwd("~/Desktop/ConformalSmallest/data-raw")
concrete=as.matrix(read.csv("concrete.csv",header=FALSE,sep=","))
concrete=as.matrix(read.csv("concrete.csv",header=FALSE,sep=","))
X_full=concrete[,1:8]
Y_full=concrete[,9]
save(X_full,Y_full,file='data/concrete.rda')
setwd("~/Desktop/ConformalSmallest")
concrete=as.matrix(read.csv("data-raw/concrete.csv",header=FALSE,sep=","))
concrete=as.matrix(read.csv("data-raw/concrete.csv",header=FALSE,sep=","))
X_full=concrete[,1:8]
Y_full=concrete[,9]
save(X_full,Y_full,file='data/concrete.rda')
concrete=as.matrix(read.csv("data-raw/concrete.csv",header=FALSE,sep=","))
X_full=concrete[,1:8]
Y_full=concrete[,9]
save(X_full,Y_full,file='data/concrete.rda')
news=as.matrix(read.csv("data-raw/OnlineNewsPopularity.csv",header=FALSE))
X_full=news[,1:59]
Y_full=news[,60]
save(X_full,Y_full,file='data/news.rda')
kernel=as.matrix(read.csv("data-raw/sgemm_product.csv",header=FALSE))
X_full=kernel[,1:14]
Y_full=apply(kernel[,15:18],1,mean)
save(X_full,Y_full,file='data/kernel.rda')
superconduct=as.matrix(read.csv("data-raw/datatrain.csv",header=FALSE))
X_full=superconduct[,1:81]
Y_full=superconduct[,82]
save(X_full,Y_full,file='data/superconduct.rda')
superconduct=as.matrix(read.csv("data-raw/train.csv",header=FALSE))
X_full=superconduct[,1:81]
Y_full=superconduct[,82]
save(X_full,Y_full,file='data/superconduct.rda')
usethis::use_data_raw()
## code to prepare `DATASET` dataset goes here
use_data(
protein,
concrete,
news,
kernel,
blog,
superconduct,
internal = FALSE,
overwrite = FALSE,
compress = "bzip2",
version = 2
)
use_data_raw(name = "DATASET", open = rlang::is_interactive())
load_all()
rm(list=ls())
load_all()
document()
load_all()
document()
load_all()
document()
load_all()
document()
blog=as.matrix(read.csv("data-raw/blogData_train.csv",header=TRUE))
X_full=blog[,2:9]
Y_full=blog[,1]
save(blog,file='data/blog.rda')
dim(blog)
protein=as.matrix(read.csv("data-raw/CASP.csv",header=TRUE))
dim(protein)
blog=as.matrix(read.csv("data-raw/blogData_train.csv",header=TRUE))
X_full=blog[,1:280]
Y_full=blog[,281]
save(blog,file='data/blog.rda')
load_all()
document()
protein=as.matrix(read.csv("data-raw/CASP.csv",header=TRUE))
X_full=protein[,2:9]
Y_full=protein[,1]
save(protein,file='data/protein.rda')
superconduct=as.matrix(read.csv("data-raw/train.csv",header=FALSE))
X_full=superconduct[,1:81]
Y_full=superconduct[,82]
save(superconduct,file='data/superconduct.rda')
news=as.matrix(read.csv("data-raw/OnlineNewsPopularity.csv",header=FALSE))
X_full=news[,1:59]
Y_full=news[,60]
save(news,file='data/news.rda')
kernel=as.matrix(read.csv("data-raw/sgemm_product.csv",header=FALSE))
X_full=kernel[,1:14]
Y_full=apply(kernel[,15:18],1,mean)
save(kernel,file='data/kernel.rda')
concrete=as.matrix(read.csv("data-raw/concrete.csv",header=FALSE,sep=","))
X_full=concrete[,1:8]
Y_full=concrete[,9]
save(concrete,file='data/concrete.rda')
load_all()
rm(list=sl())
rm(list=ls())
load_all()
document()
load_all()
document()
load_all()
document()
load_all()
document()
blog=as.matrix(read.csv("data-raw/blogData_train.csv",header=TRUE))
X_full=blog[,1:280]
Y_full=blog[,281]
save(blog,file='data/blog.rda', compress='xz')
concrete=as.matrix(read.csv("data-raw/concrete.csv",header=FALSE,sep=","))
X_full=concrete[,1:8]
Y_full=concrete[,9]
save(concrete,file='data/concrete.rda', compress='xz')
kernel=as.matrix(read.csv("data-raw/sgemm_product.csv",header=FALSE))
X_full=kernel[,1:14]
Y_full=apply(kernel[,15:18],1,mean)
save(kernel,file='data/kernel.rda', compress='xz')
news=as.matrix(read.csv("data-raw/OnlineNewsPopularity.csv",header=FALSE))
X_full=news[,1:59]
Y_full=news[,60]
save(news,file='data/news.rda', compress='xz')
protein=as.matrix(read.csv("data-raw/CASP.csv",header=TRUE))
X_full=protein[,2:9]
Y_full=protein[,1]
save(protein,file='data/protein.rda', compress='xz')
superconduct=as.matrix(read.csv("data-raw/train.csv",header=FALSE))
X_full=superconduct[,1:81]
Y_full=superconduct[,82]
save(superconduct,file='data/superconduct.rda', compress='xz')
load_all()
rm(list=ls())
load_all()
document()
exists(data("blog", package = "ConformalSmallest"))
dim(blog)
data("blog")
devtools::install()
devtools::install_github("Elsa-Yang98/ConformalSmallest")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
